// Code generated by MockGen. DO NOT EDIT.
// Source: lobby_handler.go
//
// Generated by this command:
//
//	mockgen -source=lobby_handler.go -package service -destination=lobby_handler_mock.go
//

// Package service is a generated GoMock package.
package service

import (
	models "mathly/internal/models"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockLobbyHandler is a mock of LobbyHandler interface.
type MockLobbyHandler struct {
	ctrl     *gomock.Controller
	recorder *MockLobbyHandlerMockRecorder
	isgomock struct{}
}

// MockLobbyHandlerMockRecorder is the mock recorder for MockLobbyHandler.
type MockLobbyHandlerMockRecorder struct {
	mock *MockLobbyHandler
}

// NewMockLobbyHandler creates a new mock instance.
func NewMockLobbyHandler(ctrl *gomock.Controller) *MockLobbyHandler {
	mock := &MockLobbyHandler{ctrl: ctrl}
	mock.recorder = &MockLobbyHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLobbyHandler) EXPECT() *MockLobbyHandlerMockRecorder {
	return m.recorder
}

// StartNewGame mocks base method.
func (m *MockLobbyHandler) StartNewGame(params StartGameParams) (*models.Game, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StartNewGame", params)
	ret0, _ := ret[0].(*models.Game)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StartNewGame indicates an expected call of StartNewGame.
func (mr *MockLobbyHandlerMockRecorder) StartNewGame(params any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartNewGame", reflect.TypeOf((*MockLobbyHandler)(nil).StartNewGame), params)
}
