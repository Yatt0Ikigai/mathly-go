// Code generated by MockGen. DO NOT EDIT.
// Source: jwt.go
//
// Generated by this command:
//
//	mockgen -source=jwt.go -package service -destination=jwt_mock.go
//

// Package service is a generated GoMock package.
package service

import (
	models "mathly/internal/models"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockJWT is a mock of JWT interface.
type MockJWT struct {
	ctrl     *gomock.Controller
	recorder *MockJWTMockRecorder
	isgomock struct{}
}

// MockJWTMockRecorder is the mock recorder for MockJWT.
type MockJWTMockRecorder struct {
	mock *MockJWT
}

// NewMockJWT creates a new mock instance.
func NewMockJWT(ctrl *gomock.Controller) *MockJWT {
	mock := &MockJWT{ctrl: ctrl}
	mock.recorder = &MockJWTMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJWT) EXPECT() *MockJWTMockRecorder {
	return m.recorder
}

// GenerateToken mocks base method.
func (m *MockJWT) GenerateToken(user *models.User, tokenType TokenType) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateToken", user, tokenType)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateToken indicates an expected call of GenerateToken.
func (mr *MockJWTMockRecorder) GenerateToken(user, tokenType any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateToken", reflect.TypeOf((*MockJWT)(nil).GenerateToken), user, tokenType)
}

// ValidateToken mocks base method.
func (m *MockJWT) ValidateToken(tokenString string, tokenType TokenType) (*models.Claims, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateToken", tokenString, tokenType)
	ret0, _ := ret[0].(*models.Claims)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidateToken indicates an expected call of ValidateToken.
func (mr *MockJWTMockRecorder) ValidateToken(tokenString, tokenType any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateToken", reflect.TypeOf((*MockJWT)(nil).ValidateToken), tokenString, tokenType)
}
